#服务端口
SERVER_PORT=5001



#大模型供应商配置,支持 zhipuai | openai | deepseek
LLM_PROVIDER=zhipuai

#ZhipuAI settings
ZHIPUAI_API_KEY=xxxx
ZHIPUAI_API_MODEL=GLM-4-Flash

#OpenAI settings
OPENAI_API_KEY=xxxx
OPENAI_API_MODEL=gpt-4o-mini

#DeepSeek settings
DEEPSEEK_API_KEY=
DEEPSEEK_API_BASE_URL=https://api.deepseek.com
DEEPSEEK_API_MODEL=deepseek-chat

#OllaMA settings; 注意: 如果使用 Docker 部署，127.0.0.1 指向的是容器内部的地址。请将其替换为实际的 Ollama服务器IP地址。
OLLAMA_API_BASE_URL=http://127.0.0.1:11434
OLLAMA_API_MODEL=deepseek-r1:latest

#支持review的文件类型
SUPPORTED_EXTENSIONS=.java,.py,.php,.yml,.vue,.go,.c,.cpp,.h,.js,.css,.md,.sql
REVIEW_MAX_LENGTH=20000

#消息类型配置，支持markdown和actionCard
MESSAGE_TYPE=actionCard

#钉钉配置
#钉钉配置 不同项目可以配置不同的钉钉机器人DINGTALK_WEBHOOK_URL_{project_name}
DINGTALK_ENABLED=0
DINGTALK_WEBHOOK_URL=https://oapi.dingtalk.com/robot/send?access_token=xxx
DINGTALK_WEBHOOK_URL_testgit=https://oapi.dingtalk.com/robot/send?access_token=xxx

#如果使用企业机器人, 需要配置DINGTALK_SECRET，具体可参考https://open.dingtalk.com/document/orgapp/obtain-orgapp-token
#DINGTALK_SECRET=xxx

#企业微信配置
WECOM_ENABLED=0
WECOM_WEBHOOK_URL=https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=xxx

#飞书配置
FEISHU_ENABLED=0
FEISHU_WEBHOOK_URL=https://open.feishu.cn/open-apis/bot/v2/hook/xxx

#日志配置
LOG_FILE=log/app.log
LOG_MAX_BYTES=10485760
LOG_BACKUP_COUNT=3
LOG_LEVEL=DEBUG

#工作日报发送时间
REPORT_CRONTAB_EXPRESSION=0 18 * * 1-5

#Gitlab配置
GITLAB_URL=https://gitlab.com
GITLAB_ACCESS_TOKEN=xxx
#GitLab API版本配置 如GitLab Community Edition 8.9.9 是v3
GITLAB_API_VERSION=v3  #支持v3或v4
PUSH_REVIEW_ENABLED=1 #push就会review了

# 开启Push Review功能(如果不需要push事件触发Code Review，设置为0)
PUSH_REVIEW_ENABLED=1
